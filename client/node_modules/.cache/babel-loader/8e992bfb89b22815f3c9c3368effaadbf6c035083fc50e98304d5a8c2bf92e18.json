{"ast":null,"code":"// import React from 'react'\n// import styles from '../form_section/LoginFormSection.module.css'\n// import axios from \"axios\";\n// import { useRef, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// const LoginFormSection = () => {\n//   const emailRef = useRef();\n//   const passRef = useRef();\n//   const [errorMsg, setErrorMsg] = useState();\n//   const navigate = useNavigate();\n//   return (\n//     <div className={styles.formSection}>\n//       <button onClick={() => navigate(-1)} className={styles.backButton}>Back</button>\n//       <div className={styles.formHeading}>\n//         <h1>Already have an account?</h1>\n//         <span>Your personal job finder is here</span>\n//       </div>\n//       {errorMsg && <div className={styles.errorMessage}>{errorMsg}</div>}\n//       <form\n//         onSubmit={async (e) => {\n//           e.preventDefault();\n//           console.log(process.env.REACT_APP_BASE_URL)\n//           let res = await axios.post(process.env.REACT_APP_BASE_URL +  \"/login\", {\n//             email: emailRef.current.value,\n//             password: passRef.current.value,\n//           });\n//           switch(res.data.status){\n//             case 200:\n//               localStorage.setItem(\n//                 \"data\",\n//                 JSON.stringify({\n//                   name: res.data.name,\n//                   jwtToken: res.data.jwtToken,\n//                 })\n//               );\n//               navigate(\"/\");\n//               break;    \n//             case 401:\n//               setErrorMsg(\"Invalid creadentials, Please Try again\");\n//               break;\n//             default:\n//               setErrorMsg(\"Something went wrong, Please Try again later\");\n//           }\n//         }\n//       }\n//         className={styles.loginForm}\n//       >\n//         <input\n//           placeholder=\"Email\"\n//           type=\"email\"\n//           required\n//           name=\"email\"\n//           ref={emailRef}\n//         />\n//         <input\n//           placeholder=\"Password\"\n//           type=\"password\"\n//           required\n//           name=\"password\"\n//           ref={passRef}\n//         />\n//         <button type=\"submit\">Sign in</button>\n//       </form>\n//       <div>\n//         Don’t have an account?{\" \"}\n//         <b>\n//           <u>\n//             <a href=\"./register\">Sign Up</a>\n//           </u>\n//         </b>\n//       </div>\n//     </div>\n//   )\n// }\n// export default LoginFormSection\nimport React from'react';import styles from'../form_section/LoginFormSection.module.css';import axios from'axios';import{useRef,useState}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const LoginFormSection=()=>{const emailRef=useRef();const passRef=useRef();const[errorMsg,setErrorMsg]=useState();const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();// Log the base URL to verify\nconsole.log('Base URL:',process.env.REACT_APP_BASE_URL);try{// Construct the complete URL\nconst url=\"\".concat(process.env.REACT_APP_BASE_URL,\"/login\");// Log the complete URL to verify\nconsole.log('Complete URL:',url);// Make the Axios POST request\nconst res=await axios.post(url,{email:emailRef.current.value,password:passRef.current.value});// Handle different status codes\nswitch(res.data.status){case 200:// Store data in localStorage and navigate on success\nlocalStorage.setItem('data',JSON.stringify({name:res.data.name,jwtToken:res.data.jwtToken}));navigate('/');break;case 401:setErrorMsg('Invalid credentials. Please try again.');break;default:setErrorMsg('Something went wrong. Please try again later.');}}catch(error){// Log any error that occurred during the request\nconsole.error('Error during request:',error);// Handle specific error scenarios if needed\nif(error.response){console.error('Response data:',error.response.data);console.error('Response status:',error.response.status);console.error('Response headers:',error.response.headers);}else if(error.request){console.error('Request failed:',error.request);}else{console.error('Error message:',error.message);}}};return/*#__PURE__*/_jsxs(\"div\",{className:styles.formSection,children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(-1),className:styles.backButton,children:\"Back\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.formHeading,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Already have an account?\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Your personal job finder is here\"})]}),errorMsg&&/*#__PURE__*/_jsx(\"div\",{className:styles.errorMessage,children:errorMsg}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:styles.loginForm,children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Email\",type:\"email\",required:true,name:\"email\",ref:emailRef}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Password\",type:\"password\",required:true,name:\"password\",ref:passRef}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Sign in\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Don\\u2019t have an account?\",' ',/*#__PURE__*/_jsx(\"b\",{children:/*#__PURE__*/_jsx(\"u\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"./register\",children:\"Sign Up\"})})})]})]});};export default LoginFormSection;","map":{"version":3,"names":["React","styles","axios","useRef","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","LoginFormSection","emailRef","passRef","errorMsg","setErrorMsg","navigate","handleSubmit","e","preventDefault","console","log","process","env","REACT_APP_BASE_URL","url","concat","res","post","email","current","value","password","data","status","localStorage","setItem","JSON","stringify","name","jwtToken","error","response","headers","request","message","className","formSection","children","onClick","backButton","formHeading","errorMessage","onSubmit","loginForm","placeholder","type","required","ref","href"],"sources":["C:/Users/jenad/OneDrive/Desktop/Job_Listing/Job_Listing/client/src/components/login/form_section/LoginFormSection.jsx"],"sourcesContent":["// import React from 'react'\r\n// import styles from '../form_section/LoginFormSection.module.css'\r\n// import axios from \"axios\";\r\n// import { useRef, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n// const LoginFormSection = () => {\r\n\r\n//   const emailRef = useRef();\r\n//   const passRef = useRef();\r\n//   const [errorMsg, setErrorMsg] = useState();\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   return (\r\n//     <div className={styles.formSection}>\r\n//       <button onClick={() => navigate(-1)} className={styles.backButton}>Back</button>\r\n//       <div className={styles.formHeading}>\r\n//         <h1>Already have an account?</h1>\r\n//         <span>Your personal job finder is here</span>\r\n//       </div>\r\n\r\n//       {errorMsg && <div className={styles.errorMessage}>{errorMsg}</div>}\r\n//       <form\r\n//         onSubmit={async (e) => {\r\n//           e.preventDefault();\r\n//           console.log(process.env.REACT_APP_BASE_URL)\r\n//           let res = await axios.post(process.env.REACT_APP_BASE_URL +  \"/login\", {\r\n//             email: emailRef.current.value,\r\n//             password: passRef.current.value,\r\n//           });\r\n          \r\n//           switch(res.data.status){\r\n//             case 200:\r\n//               localStorage.setItem(\r\n//                 \"data\",\r\n//                 JSON.stringify({\r\n//                   name: res.data.name,\r\n//                   jwtToken: res.data.jwtToken,\r\n//                 })\r\n//               );\r\n//               navigate(\"/\");\r\n//               break;    \r\n//             case 401:\r\n//               setErrorMsg(\"Invalid creadentials, Please Try again\");\r\n//               break;\r\n//             default:\r\n//               setErrorMsg(\"Something went wrong, Please Try again later\");\r\n//           }\r\n//         }\r\n//       }\r\n//         className={styles.loginForm}\r\n//       >\r\n//         <input\r\n//           placeholder=\"Email\"\r\n//           type=\"email\"\r\n//           required\r\n//           name=\"email\"\r\n//           ref={emailRef}\r\n//         />\r\n//         <input\r\n//           placeholder=\"Password\"\r\n//           type=\"password\"\r\n//           required\r\n//           name=\"password\"\r\n//           ref={passRef}\r\n//         />\r\n//         <button type=\"submit\">Sign in</button>\r\n//       </form>\r\n//       <div>\r\n//         Don’t have an account?{\" \"}\r\n//         <b>\r\n//           <u>\r\n//             <a href=\"./register\">Sign Up</a>\r\n//           </u>\r\n//         </b>\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default LoginFormSection\r\n\r\n\r\nimport React from 'react';\r\nimport styles from '../form_section/LoginFormSection.module.css';\r\nimport axios from 'axios';\r\nimport { useRef, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst LoginFormSection = () => {\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n  const [errorMsg, setErrorMsg] = useState();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Log the base URL to verify\r\n    console.log('Base URL:', process.env.REACT_APP_BASE_URL);\r\n\r\n    try {\r\n      // Construct the complete URL\r\n      const url = `${process.env.REACT_APP_BASE_URL}/login`;\r\n\r\n      // Log the complete URL to verify\r\n      console.log('Complete URL:', url);\r\n\r\n      // Make the Axios POST request\r\n      const res = await axios.post(url, {\r\n        email: emailRef.current.value,\r\n        password: passRef.current.value,\r\n      });\r\n\r\n      // Handle different status codes\r\n      switch (res.data.status) {\r\n        case 200:\r\n          // Store data in localStorage and navigate on success\r\n          localStorage.setItem(\r\n            'data',\r\n            JSON.stringify({\r\n              name: res.data.name,\r\n              jwtToken: res.data.jwtToken,\r\n            })\r\n          );\r\n          navigate('/');\r\n          break;\r\n        case 401:\r\n          setErrorMsg('Invalid credentials. Please try again.');\r\n          break;\r\n        default:\r\n          setErrorMsg('Something went wrong. Please try again later.');\r\n      }\r\n    } catch (error) {\r\n      // Log any error that occurred during the request\r\n      console.error('Error during request:', error);\r\n\r\n      // Handle specific error scenarios if needed\r\n      if (error.response) {\r\n        console.error('Response data:', error.response.data);\r\n        console.error('Response status:', error.response.status);\r\n        console.error('Response headers:', error.response.headers);\r\n      } else if (error.request) {\r\n        console.error('Request failed:', error.request);\r\n      } else {\r\n        console.error('Error message:', error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.formSection}>\r\n      <button onClick={() => navigate(-1)} className={styles.backButton}>\r\n        Back\r\n      </button>\r\n      <div className={styles.formHeading}>\r\n        <h1>Already have an account?</h1>\r\n        <span>Your personal job finder is here</span>\r\n      </div>\r\n\r\n      {errorMsg && <div className={styles.errorMessage}>{errorMsg}</div>}\r\n      <form onSubmit={handleSubmit} className={styles.loginForm}>\r\n        <input\r\n          placeholder=\"Email\"\r\n          type=\"email\"\r\n          required\r\n          name=\"email\"\r\n          ref={emailRef}\r\n        />\r\n        <input\r\n          placeholder=\"Password\"\r\n          type=\"password\"\r\n          required\r\n          name=\"password\"\r\n          ref={passRef}\r\n        />\r\n        <button type=\"submit\">Sign in</button>\r\n      </form>\r\n      <div>\r\n        Don’t have an account?{' '}\r\n        <b>\r\n          <u>\r\n            <a href=\"./register\">Sign Up</a>\r\n          </u>\r\n        </b>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginFormSection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}